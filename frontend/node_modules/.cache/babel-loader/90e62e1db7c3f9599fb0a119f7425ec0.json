{"ast":null,"code":"var arraySampleSize = require('./_arraySampleSize'),\n    baseSampleSize = require('./_baseSampleSize'),\n    isArray = require('./isArray'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toInteger = require('./toInteger');\n/**\n * Gets `n` random elements at unique keys from `collection` up to the\n * size of `collection`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to sample.\n * @param {number} [n=1] The number of elements to sample.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the random elements.\n * @example\n *\n * _.sampleSize([1, 2, 3], 2);\n * // => [3, 1]\n *\n * _.sampleSize([1, 2, 3], 4);\n * // => [2, 3, 1]\n */\n\n\nfunction sampleSize(collection, n, guard) {\n  if (guard ? isIterateeCall(collection, n, guard) : n === undefined) {\n    n = 1;\n  } else {\n    n = toInteger(n);\n  }\n\n  var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n  return func(collection, n);\n}\n\nmodule.exports = sampleSize;","map":{"version":3,"names":["arraySampleSize","require","baseSampleSize","isArray","isIterateeCall","toInteger","sampleSize","collection","n","guard","undefined","func","module","exports"],"sources":["/Users/safayet/Desktop/endeavour/rijks/node_modules/lodash/sampleSize.js"],"sourcesContent":["var arraySampleSize = require('./_arraySampleSize'),\n    baseSampleSize = require('./_baseSampleSize'),\n    isArray = require('./isArray'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toInteger = require('./toInteger');\n\n/**\n * Gets `n` random elements at unique keys from `collection` up to the\n * size of `collection`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to sample.\n * @param {number} [n=1] The number of elements to sample.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the random elements.\n * @example\n *\n * _.sampleSize([1, 2, 3], 2);\n * // => [3, 1]\n *\n * _.sampleSize([1, 2, 3], 4);\n * // => [2, 3, 1]\n */\nfunction sampleSize(collection, n, guard) {\n  if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n    n = 1;\n  } else {\n    n = toInteger(n);\n  }\n  var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n  return func(collection, n);\n}\n\nmodule.exports = sampleSize;\n"],"mappings":"AAAA,IAAIA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAA7B;AAAA,IACIC,cAAc,GAAGD,OAAO,CAAC,mBAAD,CAD5B;AAAA,IAEIE,OAAO,GAAGF,OAAO,CAAC,WAAD,CAFrB;AAAA,IAGIG,cAAc,GAAGH,OAAO,CAAC,mBAAD,CAH5B;AAAA,IAIII,SAAS,GAAGJ,OAAO,CAAC,aAAD,CAJvB;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,UAAT,CAAoBC,UAApB,EAAgCC,CAAhC,EAAmCC,KAAnC,EAA0C;EACxC,IAAKA,KAAK,GAAGL,cAAc,CAACG,UAAD,EAAaC,CAAb,EAAgBC,KAAhB,CAAjB,GAA0CD,CAAC,KAAKE,SAA1D,EAAsE;IACpEF,CAAC,GAAG,CAAJ;EACD,CAFD,MAEO;IACLA,CAAC,GAAGH,SAAS,CAACG,CAAD,CAAb;EACD;;EACD,IAAIG,IAAI,GAAGR,OAAO,CAACI,UAAD,CAAP,GAAsBP,eAAtB,GAAwCE,cAAnD;EACA,OAAOS,IAAI,CAACJ,UAAD,EAAaC,CAAb,CAAX;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBP,UAAjB"},"metadata":{},"sourceType":"script"}